<?xml version="1.0"?>
<!ENTITY % article SYSTEM "http://jats.nlm.nih.gov/archiving/1.2/JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="research-article" xml:lang="en">
      <front>
        <journal-meta>
          <journal-id journal-id-type="publisher-id">13321</journal-id>
          <journal-title-group>
            <journal-title>Journal of Cheminformatics</journal-title>
            <abbrev-journal-title abbrev-type="publisher">J Cheminform</abbrev-journal-title>
          </journal-title-group>
          <issn pub-type="epub">1758-2946</issn>
          <publisher>
            <publisher-name>Springer International Publishing</publisher-name>
            <publisher-loc>Cham</publisher-loc>
          </publisher>
        </journal-meta>
        <article-meta>
          <article-id pub-id-type="publisher-id">BMC1758-2946-4-24</article-id>
          <article-id pub-id-type="manuscript">361</article-id>
          <article-id pub-id-type="doi">10.1186/1758-2946-4-24</article-id>
          <article-categories>
            <subj-group subj-group-type="heading">
              <subject>Software</subject>
            </subj-group>
          </article-categories>
          <title-group>
            <article-title xml:lang="en">mol2chemfig, a tool for rendering chemical structures from molfile or SMILES format to LATE X code</article-title>
          </title-group>
          <contrib-group>
            <contrib contrib-type="author">
              <name>
                <surname>Brefo-Mensah</surname>
                <given-names>Eric K</given-names>
              </name>
              <address>
                <email>HIDDEN</email>
              </address>
              <xref ref-type="aff" rid="Aff1">1</xref>
            </contrib>
            <contrib contrib-type="author" corresp="yes">
              <name>
                <surname>Palmer</surname>
                <given-names>Michael</given-names>
              </name>
              <address>
                <email>HIDDEN</email>
              </address>
              <xref ref-type="aff" rid="Aff1">1</xref>
              <xref ref-type="corresp" rid="IDBMC17582946424_cor2">b</xref>
            </contrib>
            <aff id="Aff1">
              <label>1</label>
              <institution-wrap>
                <institution-id institution-id-type="GRID">grid.46078.3d</institution-id>
                <institution-id institution-id-type="ISNI">0000000086441405</institution-id>
                <institution content-type="org-division">Department of Chemistry</institution>
                <institution content-type="org-name">University of Waterloo</institution>
              </institution-wrap>
              <addr-line content-type="street">200 University Avenue West</addr-line>
              <addr-line content-type="postcode">N2L 3G1</addr-line>
              <addr-line content-type="city">Waterloo</addr-line>
              <addr-line content-type="state">Ontario</addr-line>
              <country country="CA">Canada</country>
            </aff>
          </contrib-group>
          <author-notes>
            <corresp id="IDBMC17582946424_cor2">
              <label>b</label>
              <email>HIDDEN</email>
            </corresp>
          </author-notes>
          <pub-date date-type="pub" publication-format="electronic">
            <day>2</day>
            <month>10</month>
            <year>2012</year>
          </pub-date>
          <pub-date date-type="collection" publication-format="electronic">
            <month>12</month>
            <year>2012</year>
          </pub-date>
          <volume>4</volume>
          <issue seq="32">1</issue>
          <elocation-id>24</elocation-id>
          <history>
            <date date-type="registration">
              <day>21</day>
              <month>8</month>
              <year>2012</year>
            </date>
            <date date-type="received">
              <day>21</day>
              <month>8</month>
              <year>2012</year>
            </date>
            <date date-type="accepted">
              <day>25</day>
              <month>9</month>
              <year>2012</year>
            </date>
            <date date-type="online">
              <day>2</day>
              <month>10</month>
              <year>2012</year>
            </date>
          </history>
          <permissions>
            <copyright-statement content-type="compact">© Brefo-Mensah and Palmer; licensee Chemistry Central Ltd. 2012</copyright-statement>
            <copyright-statement content-type="comment">This article is published under license to BioMed Central Ltd. This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link xlink:href="http://creativecommons.org/licenses/by/2.0" ext-link-type="uri">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</copyright-statement>
            <copyright-year>2012</copyright-year>
            <copyright-holder>Brefo-Mensah and Palmer; licensee Chemistry Central Ltd.</copyright-holder>
            <license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/2.0">
              <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 2.0 International License (<ext-link xlink:href="https://creativecommons.org/licenses/by/2.0" ext-link-type="uri">https://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
            </license>
          </permissions>
          <abstract xml:lang="en" id="Abs1">
            <title>Abstract</title>
            <p>Displaying chemical structures in LATE X documents currently requires either hand-coding of the structures using one of several LATE X packages, or the inclusion of finished graphics files produced with an external drawing program. There is currently no software tool available to render the large number of structures available in molfile or SMILES format to LATE X source code. We here present mol2chemfig, a Python program that provides this capability. Its output is written in the syntax defined by the chemfig TE X package, which allows for the flexible and concise description of chemical structures and reaction mechanisms. The program is freely available both through a web interface and for local installation on the user’s computer. The code and accompanying documentation can be found at <ext-link xlink:href="http://chimpsky.uwaterloo.ca/mol2chemfig" ext-link-type="uri">http://chimpsky.uwaterloo.ca/mol2chemfig</ext-link>.</p>
          </abstract>
          <kwd-group xml:lang="en">
            <title>Keywords</title>
            <kwd>LATE X Chemfig</kwd>
            <kwd>Molfile</kwd>
            <kwd>SMILES</kwd>
            <kwd>Molecular structures</kwd>
            <kwd>Code generation</kwd>
          </kwd-group>
          <custom-meta-group>
            <custom-meta>
              <meta-name>publisher-imprint-name</meta-name>
              <meta-value>Chemistry Central</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>volume-issue-count</meta-name>
              <meta-value>1</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>issue-article-count</meta-name>
              <meta-value>39</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>issue-toc-levels</meta-name>
              <meta-value>0</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>issue-copyright-holder</meta-name>
              <meta-value>The Author(s)</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>issue-copyright-year</meta-name>
              <meta-value>2012</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>article-contains-esm</meta-name>
              <meta-value>Yes</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>article-numbering-style</meta-name>
              <meta-value>Unnumbered</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>article-registration-date-year</meta-name>
              <meta-value>2012</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>article-registration-date-month</meta-name>
              <meta-value>8</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>article-registration-date-day</meta-name>
              <meta-value>21</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>article-toc-levels</meta-name>
              <meta-value>0</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>toc-levels</meta-name>
              <meta-value>0</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>volume-type</meta-name>
              <meta-value>Regular</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>journal-product</meta-name>
              <meta-value>ArchiveJournal</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>numbering-style</meta-name>
              <meta-value>Unnumbered</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>article-grants-type</meta-name>
              <meta-value>OpenChoice</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>metadata-grant</meta-name>
              <meta-value>OpenAccess</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>abstract-grant</meta-name>
              <meta-value>OpenAccess</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>bodypdf-grant</meta-name>
              <meta-value>OpenAccess</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>bodyhtml-grant</meta-name>
              <meta-value>OpenAccess</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>bibliography-grant</meta-name>
              <meta-value>OpenAccess</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>esm-grant</meta-name>
              <meta-value>OpenAccess</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>online-first</meta-name>
              <meta-value>false</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>pdf-file-reference</meta-name>
              <meta-value>BodyRef/PDF/13321_2012_Article_361.pdf</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>pdf-type</meta-name>
              <meta-value>Typeset</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>target-type</meta-name>
              <meta-value>OnlinePDF</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>issue-type</meta-name>
              <meta-value>Regular</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>article-type</meta-name>
              <meta-value>OriginalPaper</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>journal-subject-primary</meta-name>
              <meta-value>Chemistry</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>journal-subject-secondary</meta-name>
              <meta-value>Computer Applications in Chemistry</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>journal-subject-secondary</meta-name>
              <meta-value>Documentation and Information in Chemistry</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>journal-subject-secondary</meta-name>
              <meta-value>Theoretical and Computational Chemistry</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>journal-subject-secondary</meta-name>
              <meta-value>Computational Biology/Bioinformatics</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>journal-subject-collection</meta-name>
              <meta-value>Chemistry and Materials Science</meta-value>
            </custom-meta>
            <custom-meta>
              <meta-name>open-access</meta-name>
              <meta-value>true</meta-value>
            </custom-meta>
          </custom-meta-group>
        </article-meta>
        <notes notes-type="ESMHint">
          <title>Electronic supplementary material</title>
          <p>The online version of this article (doi:<ext-link xlink:href="10.1186/1758-2946-4-24" ext-link-type="doi">10.1186/1758-2946-4-24</ext-link>) contains supplementary material, which is available to authorized users.</p>
        </notes>
      </front>
      <body>
        <sec id="Sec1">
          <title>Background</title>
          <p>While TE X and LATE X provide excellent built-in support for mathematics and physics, the same cannot be said for chemistry. Several TE X and LATE X packages have been devised to address this lack of built-in support and to facilitate the hand-coding of chemical structures. Older examples of this approach are xymtex [<xref ref-type="bibr" rid="CR1">1</xref>] and ppchTeX [<xref ref-type="bibr" rid="CR2">2</xref>]. A recent development is chemfig [<xref ref-type="bibr" rid="CR3">3</xref>], which in turn is built on top of the TiKZ general-purpose graphics package [<xref ref-type="bibr" rid="CR4">4</xref>] (Figure <xref rid="Fig1" ref-type="fig">1</xref>). The syntax implemented by chemfig is remarkably concise and regular, which makes hand-coding of simple organic molecules effortless. The package offers many ways to customize the appearance of the rendered structures. It also facilitates the depiction of chemical reaction mechanisms, and it seems fair to say that chemfig sets a new standard for chemical illustrations in LATE X. Nevertheless, the hand-coding approach remains time-consuming with large molecules. The purpose of the mol2chemfig program described here is to remove this requirement by allowing for the generation of chemfig code from readily available chemical structure file formats.<fig id="Fig1"><label>Figure 1</label><caption xml:lang="en"><p><bold>mol2chemfig processing flowchart.</bold> Rendering molecular structures with mol2chemfig involves two separate executables, namely mol2chemfig itself (or, strictly speaking, the Python interpreter, which runs mol2chemfig) and a TE X engine such as pdftex. Processing inside TE X requires several packages, all of which will be loaded into LATE X by requiring the mol2chemfig package.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13321_2012_Article_361_Fig1_HTML.jpg" /></fig></p>
          <p>The molfile [<xref ref-type="bibr" rid="CR5">5</xref>] and the SMILES [<xref ref-type="bibr" rid="CR6">6</xref>] data formats are widely used to represent molecule structures with or without atomic coordinates, respectively. The entries in the PubChem database [<xref ref-type="bibr" rid="CR7">7</xref>] are available in both formats. Other chemical data formats can be converted to molfile or SMILES using converters such as openbabel [<xref ref-type="bibr" rid="CR8">8</xref>], and most interactive chemical drawing programs can export these formats as well. We therefore chose molfile and SMILES as input formats for mol2chemfig.</p>
        </sec>
        <sec id="Sec2">
          <title>Implementation</title>
          <p>mol2chemfig is written in Python version 2 [<xref ref-type="bibr" rid="CR9">9</xref>]. It was tested only on Python 2.7 but uses no particular features of that version, and should therefore run on any recent Python 2.x installation. In addition to various modules from the standard library, it uses the indigo cheminformatics library and its accompanying Python API [<xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR11">11</xref>], which it relies on for parsing of molfile and SMILES input, addition or removal of hydrogen atoms, and the calculation of missing coordinates.</p>
          <p>The program, which is used from the command line, and its required libraries can be installed on the user’s computer. Alternatively, a server installation of the program can be accessed through a web interface. As a third option, a command line-driven thin web client is available, which accepts input in the same way as the locally installed program but then hands it off to the server installation. The web interface is also implemented in Python. The thin client is implemented in Lua. Since TeXLive contains a Lua interpreter, it runs the thin client without installing any other software. MikTex should to the same, but the authors have not confirmed this. The thin client also transparently accesses the most up-to-date version of mol2chemfig.</p>
          <p>The code in mol2chemfig is divided into several modules, whose functions are briefly outlined in Table <xref rid="Tab1" ref-type="table">1</xref>. Additional information is contained within the doc strings and comments in the source code. Execution of the program involves the following major stages: <list list-type="order"><list-item><p>Using indigo, the molfile or SMILES input is read into the data structures defined by that library. If coordinates are missing (SMILES input) or the user has explicitly requested calculation of new ones, indigo is used to compute them.</p></list-item></list><table-wrap id="Tab1"><label>Table 1</label><caption xml:lang="en"><p><bold>mol2chemfig code modules</bold></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"><p>Module name(s)</p></th><th align="left"><p>Role</p></th></tr></thead><tbody><tr><td align="left"><p>processor</p></td><td align="left"><p>Accepts and validates user input from the command line or through the web; invokes indigo to parse input and supply missing coordinates; hands over to molecule</p></td></tr><tr><td align="left"><p>molecule</p></td><td align="left"><p>Generates tree representation of the molecule, applies options, renders molecule to chemfig code</p></td></tr><tr><td align="left"><p>chemfig_mappings</p></td><td align="left"><p>Supplies translations and auxiliary code for rendering the molecule tree to chemfig code</p></td></tr><tr><td align="left"><p>atom, bond</p></td><td align="left"><p>Supply auxiliary classes for molecule</p></td></tr><tr><td align="left"><p>common</p></td><td align="left"><p>Supplies auxiliary classes and global settings</p></td></tr><tr><td align="left"><p>options, optionparser</p></td><td align="left"><p>Define and process options</p></td></tr></tbody></table></table-wrap></p>
          <p>
            <list list-type="order">
              <list-item>
                <p>From the data structures populated by indigo, a tree representation of the molecule is built.</p>
              </list-item>
              <list-item>
                <p>The tree is traversed and annotated in order to satisfy the user-selected options for molecule rotation, bond scaling and so forth.</p>
              </list-item>
              <list-item>
                <p>The tree is rendered to chemfig code, which is returned.</p>
              </list-item>
            </list>
          </p>
          <p>The chemfig code generated by mol2chemfig uses several custom macros. These macros must be loaded by LATE X documents in order to execute the generated code; they are contained within a separate small LATE X package (mol2chemfig.sty) that also takes care of loading the chemfig package. The chemfig package, in turn, requires and loads the TiKZ package (Figure <xref rid="Fig1" ref-type="fig">1</xref>).</p>
          <p>As of this writing, both TiKZ and chemfig are available in the two major TE X distributions (MikTeX and TeXLive). The custom LATE X code for mol2chemfig is included in this program’s download.</p>
        </sec>
        <sec id="Sec3">
          <title>Results and discussion</title>
          <p>The use of the program and its features will here be illustrated with a few short examples; some more examples are contained in the documentation available through the program’s website, as well as in the Additional file <xref ref-type="supplementary-material" rid="MOESM1">1</xref> to this paper. While some basic elements of chemfig’s syntax will be briefly introduced, the latter will not be covered systematically. The chemfig package’s accompanying documentation is clearly written and thorough; reference [<xref ref-type="bibr" rid="CR12">12</xref>] gives a brief but useful introduction.</p>
          <sec id="Sec4">
            <title>Basics of operation</title>
            <p>The program is invoked from the command line. It takes exactly one argument, which by default is the name of a file containing a single molecule in molfile format. Output is written to stdout; output redirection will typically be used to write to a file instead. A miscellany of options is available to modify input and output. Invoking mol2chemfig -h or simply mol2chemfig will display the full list of options and their descriptions.</p>
          </sec>
          <sec id="Sec5">
            <title>Hand-written versus <bold>mol2chemfig</bold>-generated <bold>chemfig</bold>code</title>
            <p>Figure <xref rid="Fig2" ref-type="fig">2</xref> depicts norepinephrine, rendered using either hand-crafted and mol2chemfig-generated code. The rendered result is very similar, although the double bonds in the ring are better proportioned in A. This difference arises from the use of chemfig’s syntax for rings in the hand-written version. The ⋆6(..) clause (spanning lines 7–14 in Figure <xref rid="Fig2" ref-type="fig">2A</xref>) declares a six-membered ring, and the - and = symbols within it denote the single and double bonds in the ring. Nested parentheses create branching bonds. Within the ring, specification of bond angles is not required, as they are inferred from the number of the ring atoms.<fig id="Fig2"><label>Figure 2</label><caption xml:lang="en"><p><bold>Structure of norepinephrine, rendered with hand-written or mol2chemfig-generated chemfig code.</bold> The code in <bold>A</bold> was hand-written and uses chemfig’s dedicated syntax for specifying rings (see lines 7–14). The code in <bold>B</bold> was generated with the mol2chemfig command shown at the top; it does not use chemfig’s ring syntax but instead treats the ring much like a regular branch. Each line of code specifies one bond; the number in the line-end comment specifies the atom that this bond connects to. While the code examples use line breaks and indentation for clarity, this is not required; whitespace is insignificant to chemfig.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13321_2012_Article_361_Fig2_HTML.jpg" /></fig></p>
            <p>Outside of the ring, bond angles cannot be inferred and are specified explicitly between angular brackets. A preceding single colon denotes an absolute angle; an angle that is relative to the preceding bond can be specified with two colons, as in [::45]. Branches are again created by parentheses, as in line 5 of Figure <xref rid="Fig2" ref-type="fig">2A</xref>; this line also illustrates chemfig’s convention for specifying stereo bonds that point upwards. Since chemfig ignores whitespace, Figure <xref rid="Fig2" ref-type="fig">2A</xref> could also have been written as: ∖chemfigNH_2-[:270]-[:210](&lt;[:150]HO)-[:270]⋆6(=-(-HO)=(-OH)-=-); this style might appeal to enthusiasts of the brainfuck language [<xref ref-type="bibr" rid="CR13">13</xref>].</p>
            <p>While elegant and effective for hand-coded molecules, chemfig’s syntax for rings is somewhat orthogonal to the tree syntax used with other parts of the molecule and thus is not implemented in mol2chemfig; therefore, the generated code in Figure <xref rid="Fig2" ref-type="fig">2B</xref> treats the ring much like the remainder of the molecule. By default, mol2chemfig uses one line for each bond and appends an end-of-line comment with the number of the atom that is reached by this bond; this number is the same as in the input if the latter is given in molfile format. If the number is prefixed with ->, as in line 16 in Figure <xref rid="Fig2" ref-type="fig">2B</xref>, this indicates that the bond closes a ring and points back to an atom that appeared in the output earlier.</p>
            <p>In the generated code, line-end comments and dispensable whitespace can be suppressed by passing the -z or --terse option (see Figure <xref rid="Fig3" ref-type="fig">3</xref> for an example). However, even with this option, generated code will tend to be more verbose than hand-crafted chemfig code and should not be taken as a model for how to write the latter.<fig id="Fig3"><label>Figure 3</label><caption xml:lang="en"><p><bold>Structure of FMNH.</bold> The structure of FMNH (flavin mononucleotide hydride) contains charges and a radical, which are preserved during conversion with mol2chemfig. The chemfig code was generated using the --terse option, which removes whitespace and comments from the output.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13321_2012_Article_361_Fig3_HTML.jpg" /></fig></p>
            <p>A convenient method to include the code generated by mol2chemfig in a LATE X document is to load it from an external file with ∖input. Note, however, that ∖input cannot be used inside a ∖chemfig macro; therefore, the ∖chemfig macro must be part of the external file. The -w or --wrap-chemfig option used in Figure <xref rid="Fig2" ref-type="fig">2B</xref> assists with this by enclosing the generated code in a ∖chemfig macro.</p>
          </sec>
          <sec id="Sec6">
            <title>Charges and radicals</title>
            <p>The molfile format can represent radicals and charges, and these are supported by mol2chemfig. Charges and radical electrons (as well as implicit hydrogens) are placed so as to minimize interference with bonds attached to the atom in question. Figure <xref rid="Fig3" ref-type="fig">3</xref> shows the structure of FMNH as an example.</p>
          </sec>
          <sec id="Sec7">
            <title>Coordinate calculation and transformations</title>
            <p>In <xref rid="Fig4" ref-type="fig">4</xref><xref rid="Fig4" ref-type="fig">4A</xref>, the antitumor drug doxorubicin is rendered from coordinates obtained directly from PubChem; this is achieved using the -i pubchem or --input=pubchem option. Also used in this figure is the -y delete or --hydrogens=delete option, which converts all explicit hydrogens to implicit ones.<fig id="Fig4"><label>Figure 4</label><caption xml:lang="en"><p><bold>Structure of doxorubicin.</bold> The structure of doxorubicin, rendered from a PubChem record without <bold>A</bold> or with <bold>B</bold> recalculation of coordinates. The code examples in both <bold>A</bold> and <bold>B</bold> are truncated. See text for additional details.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13321_2012_Article_361_Fig4_HTML.jpg" /></fig></p>
            <p>In the rendered structure, the bond angles seem just a little off; this is confirmed by looking at the generated code, which shows angles that are close to, but not quite exactly the multiples of 30 degrees. Instead of fixing up all those angles manually, we can ask mol2chemfig to recalculate them for us with the -u or --recalculate-coordinates option; this is shown in Figure <xref rid="Fig4" ref-type="fig">4B</xref>. This example also illustrates the -p or --flip option to horizontally flip the molecule; other options allow vertical flipping and rotation. Finally, the -o or --aromatic-circles option renders aromatic rings with circles instead of discrete bonds.</p>
            <p>Note that, in the recalculated structure, the orientations of some substituents are changed. These decisions are made by indigo, from which mol2chemfig adopts the coordinate calculation wholesale.</p>
          </sec>
          <sec id="Sec8">
            <title>Working with sub-molecules</title>
            <p>The chemfig package allows us to define sub-molecules that we can reuse as parts of larger assemblies. Figure <xref rid="Fig5" ref-type="fig">5</xref> illustrates this with a simple hand-coded example, in which the aspirin molecule is built using two sub-molecule definitions, named acetyl and benzoate, respectively.<fig id="Fig5"><label>Figure 5</label><caption xml:lang="en"><p><bold>Structure of aspirin, composed from two sub-molecules.</bold> This hand-written example illustrates the use of chemfig’s submol mechanism. Two named sub-molecules are defined, which can then be referenced to compose the complete molecule.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13321_2012_Article_361_Fig5_HTML.jpg" /></fig></p>
            <p>Let us assume we want to build the tripeptide shown in <xref rid="Fig6" ref-type="fig">6</xref> Figure <xref rid="Fig6" ref-type="fig">6C</xref>. We can use the -l phe or --submol-name=phe option to render the phenylalanyl-residue to a named sub-molecule definition (using the name phe). However, a naive first attempt fails (Figure <xref rid="Fig6" ref-type="fig">6A</xref>), since it connects the wrong atoms between successive sub-molecules.<fig id="Fig6"><label>Figure 6</label><caption xml:lang="en"><p><bold>Construction of a tripeptide from a mol2chemfig-generated aminoacyl residue.</bold> The file containing the coordinates for a phenylalanyl residue was rendered to a ∖submol definition, and three copies of the latter were concatenated. In <bold>A</bold>, mol2chemfig was allowed to arbitrarily pick the first and last atoms of the sub-molecule’s main chain, which causes the connecting bonds to be misplaced. In <bold>B</bold>, the atom numbers of the molfile were displayed using the -n or --atom-numbers option. In <bold>C</bold>, atoms 6 and 11 were specified as the main chain entry and exit points, respectively; this causes the connecting bonds to be placed as intended. In the generated code, the amino group was manually adjusted.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13321_2012_Article_361_Fig6_HTML.jpg" /></fig></p>
            <p>The submol mechanism operates essentially through string substitution; therefore, subsequent sub-molecules are simply connected across the last and first atoms of their respective main chains. In order to place those connecting bonds correctly, we thus need to take control of the entry and exit atoms for the sub-molecules. To find the correct ones, we can let mol2chemfig print the atom numbers, as illustrated in Figure <xref rid="Fig6" ref-type="fig">6B</xref>. Setting atoms 6 and 11 as entry and exit atoms, respectively, then produces the structure shown in Figure <xref rid="Fig6" ref-type="fig">6C</xref>.</p>
            <p>Note that, in the sub-molecule definition generated for Figure <xref rid="Fig6" ref-type="fig">6C</xref>, the primary amino group was manually changed to a secondary one. Generally speaking, while basic usage of mol2chemfig does not require familiarity with chemfig’s syntax, the ability to manually touch up the generated code will notably increase the usefulness of this program. The chemfig package offers a plethora of settings for bond lengths, colors and patterns as well as font sizes and shapes that allow the user to tweak the appearance of the rendered structures. It also provides facilities to depict reaction mechanisms and schemes; structures generated with mol2chemfig can be manually modified and incorporated into such schemes.</p>
          </sec>
        </sec>
        <sec id="Sec9" sec-type="conclusions">
          <title>Conclusion</title>
          <p>The mol2chemfig program introduced here allows the conversion of molecules specified in molfile or SMILES format to the TE X-compatible format defined by the chemfig package. The generated code can be included in documents as is, or can be edited and integrated into larger chemfig graphics. We hope the program will be useful for authors who wish to illustrate the structures of organic molecules and reactions in LATE X documents.</p>
        </sec>
        <sec id="Sec10">
          <title>Availability and requirements</title>
          <p><bold>Project Name:</bold> mol2chemfig<bold>Project home page:</bold> http://chimpsky.uwaterloo.ca/mol2chemfig/<bold>Operating system(s):</bold> Linux, Windows, Mac<bold>Programming language:</bold> Python 2.7<bold>Other requirements:</bold> For full version: Python 2.7, the indigo toolkit and its prerequisite libraries; for thin client: a Lua interpreter. The LuaTeX binary that is available through TeXLive or MikTeX satisfies this requirement. (The manual installation of indigo is described at <ext-link xlink:href="https://github.com/ggasoftware/indigo/blob/master/README.txt" ext-link-type="uri">https://github.com/ggasoftware/indigo/blob/master/README.txt</ext-link>; binary packages are available for several Linux distributions.)<bold>Any Restrictions to use by non-academics:</bold> None. The code is freely available under the LATE X public license.</p>
          <p>The locally installable full version and the thin web client are packaged and available for download from the project’s website. The server setup that is used by both the web interface and the web client is not routinely available, but the required code and setup instructions will be shared upon request.</p>
        </sec>
        <sec id="Sec11">
          <title>Author’s contributions</title>
          <p>EB-M: code implementation and testing, preparation of manuscript; MP: code implementation, preparation of manuscript. Both authors have read and approved the manuscript.</p>
        </sec>
      </body>
      <back>
        <ack>
          <title>Acknowledgements</title>
          <p>We thank the author of the chemfig package, Christian Tellechea, for helpful discussion and for the contribution of some auxiliary TE X code.</p>
        </ack>
        <ref-list id="Bib1">
          <title>References</title>
          <ref-list>
            <ref id="CR1">
              <label>1.</label>
              <mixed-citation publication-type="book">
                <person-group person-group-type="author">
                  <name>
                    <surname>Fujitaa</surname>
                    <given-names>S</given-names>
                  </name>
                </person-group>
                <source>The XyMTeX System for Drawing Chemical Structures</source>
                <year>2010</year>
                <comment>http://xymtex.com/fujitas3/xymtex/indexe.html []</comment>
              </mixed-citation>
            </ref>
            <ref id="CR2">
              <label>2.</label>
              <mixed-citation publication-type="book">
                <person-group person-group-type="author">
                  <name>
                    <surname>Hagen</surname>
                    <given-names>J</given-names>
                  </name>
                  <name>
                    <surname>Otten</surname>
                    <given-names>AF</given-names>
                  </name>
                </person-group>
                <source>PPCHTEX, a macropackage for typesetting chemical structure formulas</source>
                <year>2001</year>
                <comment>www.pragma-ade.com/general/manuals/mp-ch-en.pdf []</comment>
              </mixed-citation>
            </ref>
            <ref id="CR3">
              <label>3.</label>
              <mixed-citation publication-type="book">
                <person-group person-group-type="author">
                  <name>
                    <surname>Tellechea</surname>
                    <given-names>C</given-names>
                  </name>
                </person-group>
                <source>chemfig: Draw molecules with easy syntax</source>
                <year>2012</year>
                <comment>http://www.ctan.org/pkg/chemfig/ []</comment>
              </mixed-citation>
            </ref>
            <ref id="CR4">
              <label>4.</label>
              <mixed-citation publication-type="book">
                <person-group person-group-type="author">
                  <name>
                    <surname>Tantau</surname>
                    <given-names>T</given-names>
                  </name>
                  <name>
                    <surname>Feuersaenger</surname>
                    <given-names>C</given-names>
                  </name>
                </person-group>
                <source>PGF and TikZ - Graphic systems for TeX</source>
                <year>2011</year>
                <comment>http://sourceforge.net/projects/pgf/ []</comment>
              </mixed-citation>
            </ref>
            <ref id="CR5">
              <label>5.</label>
              <mixed-citation publication-type="journal">
                <person-group person-group-type="author">
                  <name>
                    <surname>Dalby</surname>
                    <given-names>A</given-names>
                  </name>
                  <name>
                    <surname>Nourse</surname>
                    <given-names>JG</given-names>
                  </name>
                  <name>
                    <surname>Hounshell</surname>
                    <given-names>WD</given-names>
                  </name>
                  <name>
                    <surname>Gushurst</surname>
                    <given-names>AKI</given-names>
                  </name>
                  <name>
                    <surname>Grier</surname>
                    <given-names>DL</given-names>
                  </name>
                  <name>
                    <surname>Leland</surname>
                    <given-names>BA</given-names>
                  </name>
                  <name>
                    <surname>Laufer</surname>
                    <given-names>J</given-names>
                  </name>
                </person-group>
                <article-title xml:lang="en">Description of several chemical structure file formats used by computer programs developed at Molecular Design Limited</article-title>
                <source>J Chem Inform Comp Sci</source>
                <year>1992</year>
                <volume>32</volume>
                <fpage>244</fpage>
                <lpage>255</lpage>
                <pub-id pub-id-type="other" assigning-authority="ChemPort ( Chemical Abstract Service )">1:CAS:528:DyaK38XisFCrtbo%3D</pub-id>
                <pub-id pub-id-type="doi">10.1021/ci00007a012</pub-id>
                <comment>http://pubs.acs.org/doi/abs/10.1021/ci00007a012 []</comment>
              </mixed-citation>
            </ref>
            <ref id="CR6">
              <label>6.</label>
              <mixed-citation publication-type="journal">
                <person-group person-group-type="author">
                  <name>
                    <surname>Weininger</surname>
                    <given-names>D</given-names>
                  </name>
                </person-group>
                <article-title xml:lang="en">SMILES, a chemical language and information system. 1. Introduction to methodology and encoding rules</article-title>
                <source>J Chem Inf Model</source>
                <year>1988</year>
                <volume>28</volume>
                <fpage>31</fpage>
                <lpage>36</lpage>
                <pub-id pub-id-type="other" assigning-authority="ChemPort ( Chemical Abstract Service )">1:CAS:528:DyaL1cXnsVeqsA%3D%3D</pub-id>
                <pub-id pub-id-type="doi">10.1021/ci00057a005</pub-id>
              </mixed-citation>
            </ref>
            <ref id="CR7">
              <label>7.</label>
              <mixed-citation publication-type="other">The PubChem database. 2012, [<ext-link xlink:href="http://pubchem.ncbi.nlm.nih.gov/" ext-link-type="uri">http://pubchem.ncbi.nlm.nih.gov/</ext-link>]</mixed-citation>
            </ref>
            <ref id="CR8">
              <label>8.</label>
              <mixed-citation publication-type="journal">
                <person-group person-group-type="author">
                  <name>
                    <surname>O’Boyle</surname>
                    <given-names>NM</given-names>
                  </name>
                  <name>
                    <surname>Banck</surname>
                    <given-names>M</given-names>
                  </name>
                  <name>
                    <surname>James</surname>
                    <given-names>CA</given-names>
                  </name>
                  <name>
                    <surname>Morley</surname>
                    <given-names>C</given-names>
                  </name>
                  <name>
                    <surname>Vandermeersch</surname>
                    <given-names>T</given-names>
                  </name>
                  <name>
                    <surname>Hutchison</surname>
                    <given-names>GR</given-names>
                  </name>
                </person-group>
                <article-title xml:lang="en">Open Babel: An open chemical toolbox</article-title>
                <source>J Cheminform</source>
                <year>2011</year>
                <volume>3</volume>
                <fpage>33</fpage>
                <pub-id pub-id-type="doi">10.1186/1758-2946-3-33</pub-id>
                <comment>http://view.ncbi.nlm.nih.gov/pubmed/21982300 []</comment>
              </mixed-citation>
            </ref>
            <ref id="CR9">
              <label>9.</label>
              <mixed-citation publication-type="other">The Python programming language. 2012, [<ext-link xlink:href="http://www.python.org/" ext-link-type="uri">http://www.python.org/</ext-link>]</mixed-citation>
            </ref>
            <ref id="CR10">
              <label>10.</label>
              <mixed-citation publication-type="journal">
                <person-group person-group-type="author">
                  <name>
                    <surname>Pavlov</surname>
                    <given-names>D</given-names>
                  </name>
                  <name>
                    <surname>Rybalkin</surname>
                    <given-names>M</given-names>
                  </name>
                  <name>
                    <surname>Karulin</surname>
                    <given-names>B</given-names>
                  </name>
                  <name>
                    <surname>Kozhevnikov</surname>
                    <given-names>M</given-names>
                  </name>
                  <name>
                    <surname>Savelyev</surname>
                    <given-names>A</given-names>
                  </name>
                  <name>
                    <surname>Churinov</surname>
                    <given-names>A</given-names>
                  </name>
                </person-group>
                <article-title xml:lang="en">Indigo: universal cheminformatics API</article-title>
                <source>J Cheminform</source>
                <year>2011</year>
                <volume>3</volume>
                <issue>Suppl 1</issue>
                <fpage>P4</fpage>
                <pub-id pub-id-type="doi">10.1186/1758-2946-3-S1-P4</pub-id>
                <comment>http://dx.doi.org/10.1186/1758-2946-3-S1-P4 []</comment>
              </mixed-citation>
            </ref>
            <ref id="CR11">
              <label>11.</label>
              <mixed-citation publication-type="other">The indigo cheminformatics toolkit. 2012, [<ext-link xlink:href="http://ggasoftware.com/opensource/indigo/" ext-link-type="uri">http://ggasoftware.com/opensource/indigo/</ext-link>]</mixed-citation>
            </ref>
            <ref id="CR12">
              <label>12.</label>
              <mixed-citation publication-type="book">
                <person-group person-group-type="author">
                  <name>
                    <surname>Wright</surname>
                    <given-names>J</given-names>
                  </name>
                </person-group>
                <source>Exploring ChemFig: Basics</source>
                <year>2012</year>
                <comment>http://www.texdev.net/2012/08/25/exploring-chemfig-basics/ []</comment>
              </mixed-citation>
            </ref>
            <ref id="CR13">
              <label>13.</label>
              <mixed-citation publication-type="book">
                <person-group person-group-type="author">
                  <name>
                    <surname>Paczkowski</surname>
                    <given-names>A</given-names>
                  </name>
                </person-group>
                <source>99 bottles of beer. One program in 1500 variations: Language brainfuck</source>
                <year>2005</year>
                <comment>http://www.99-bottles-of-beer.net/language-brainfuck-101.html []</comment>
              </mixed-citation>
            </ref>
          </ref-list>
        </ref-list>
        <app-group>
          <app id="App1">
            <sec id="Sec12">
              <title>Electronic supplementary material</title>
              <p>
                <supplementary-material content-type="local-data" id="MOESM1" xlink:title="Electronic supplementary material">
                  <media mimetype="application" mime-subtype="x-zip-compressed" xlink:href="MediaObjects/13321_2012_361_MOESM1_ESM.zip" position="anchor">
                    <caption xml:lang="en">
                      <p>Additional file 1: mol2chemfig sample LATE X document. (ZIP 120 KB)</p>
                    </caption>
                  </media>
                </supplementary-material>
              </p>
            </sec>
            <sec id="Sec13">
              <title>Authors’ original submitted files for images</title>
              <p>Below are the links to the authors’ original submitted files for images.<supplementary-material content-type="local-data" id="MOESM2" xlink:title="Authors’ original submitted files for images"><media mimetype="application" mime-subtype="pdf" xlink:href="MediaObjects/13321_2012_361_MOESM2_ESM.pdf" position="anchor"><caption xml:lang="en"><p>Authors’ original file for figure 1</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="MOESM3" xlink:title="Authors’ original submitted files for images"><media mimetype="application" mime-subtype="pdf" xlink:href="MediaObjects/13321_2012_361_MOESM3_ESM.pdf" position="anchor"><caption xml:lang="en"><p>Authors’ original file for figure 2</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="MOESM4" xlink:title="Authors’ original submitted files for images"><media mimetype="application" mime-subtype="pdf" xlink:href="MediaObjects/13321_2012_361_MOESM4_ESM.pdf" position="anchor"><caption xml:lang="en"><p>Authors’ original file for figure 3</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="MOESM5" xlink:title="Authors’ original submitted files for images"><media mimetype="application" mime-subtype="pdf" xlink:href="MediaObjects/13321_2012_361_MOESM5_ESM.pdf" position="anchor"><caption xml:lang="en"><p>Authors’ original file for figure 4</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="MOESM6" xlink:title="Authors’ original submitted files for images"><media mimetype="application" mime-subtype="pdf" xlink:href="MediaObjects/13321_2012_361_MOESM6_ESM.pdf" position="anchor"><caption xml:lang="en"><p>Authors’ original file for figure 5</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="MOESM7" xlink:title="Authors’ original submitted files for images"><media mimetype="application" mime-subtype="pdf" xlink:href="MediaObjects/13321_2012_361_MOESM7_ESM.pdf" position="anchor"><caption xml:lang="en"><p>Authors’ original file for figure 6</p></caption></media></supplementary-material></p>
            </sec>
          </app>
        </app-group>
        <notes notes-type="Misc">
          <title>Competing interests</title>
          <p>The authors declare that they have no competing interests.</p>
        </notes>
      </back>
    </article>
